/* 


Innehållsförteckning:
    1. Lista över alla iphone-modeller från iPhone X och senare (som har skärmhinder, "notches")
    2. Safe area insets med CSS 
    3. Förklaring av -webkit-device-pixel-ratio
    4. Media queries för alla iPhone-modeller som iPhone X och senare, inklusive deras specifika 
     upplösningar och pixel-förhållanden
  
------------------------------------------------------------------------

1. Lista över iPhone-modeller från iPhone X och senare
Här är en lista över iPhone-modeller från iPhone X och framåt som har skärmhinder som "notches":

iPhone X
iPhone XR
iPhone XS
iPhone XS Max
iPhone 11
iPhone 11 Pro
iPhone 11 Pro Max
iPhone 12 mini
iPhone 12
iPhone 12 Pro
iPhone 12 Pro Max
iPhone 13 mini
iPhone 13
iPhone 13 Pro
iPhone 13 Pro Max
iPhone 14
iPhone 14 Plus
iPhone 14 Pro
iPhone 14 Pro Max
iPhone 15
iPhone 15 Plus
iPhone 15 Pro
iPhone 15 Pro Max

Exempel på androids som också har notches:
Google Pixel 3 XL och senare modeller
Google Pixel 4 XL
OnePlus 6 och senare modeller
OnePlus 7 Pro och senare modeller
OnePlus 7T
Samsung Galaxy S10 och senare modeller
Samsung Galaxy Note 10 och senare modeller
Huawei P20 Pro och senare modeller
Huawei Mate 20 och senare modeller
Xiaomi Mi 8 och senare modeller

------------------------------------------------------------------------

2. Safe Area Insets för iPhones med "Notches":
    När man utvecklar en app för iPhones med "notches" (iPhone X och senare), 
    måste man ta hänsyn till skärmens avskärmningsområden, även kallade "safe area insets". 
    Dessa områden ser till att viktigt innehåll inte döljs bakom skärmutskärningar eller hamnar
    för nära skärmens kanter. Här är hur du kan använda CSS och media queries för att hantera detta.

  Exempel på Safe Area Insets med CSS:
    Man kan använda CSS variabler som specifikt hanterar "safe area insets" för att 
    säkerställa att innehåll alltid visas korrekt. Apple har definierat CSS-enheter för detta ändamål:
    - env(safe-area-inset-top)
    - env(safe-area-inset-bottom)
    - env(safe-area-inset-left)
    - env(safe-area-inset-right)

    Safe area insets är avstånd från skärmens kanter som säkerställer att innehållet
    inte hamnar under obekväma eller oanvändbara områden. Till exempel på en iPhone
    med en notch eller avrundade hörn. Dessa insets hjälper till att placera innehåll
    på ett säkert avstånd från dessa områden så att det alltid är synligt och lätt att använda.

    Användning av env()
    env()-funktionen används för att hämta värden från miljövariabler som definieras av
    enheten eller webbläsaren. I det här fallet används den för att få värdena för
    safe-area-inset-top, safe-area-inset-bottom, safe-area-inset-left, och safe-area-inset-right.

   CSS-kodens Syfte
   CSS-koden nedan säkerställer att body-elementet på en webbplats har tillräckligt med padding
    för att innehållet inte ska hamna under någon fysisk obekvämhet som en notch, hemindikator eller avrundat hörn.

    Detaljerad Förklaring
    padding-top: env(safe-area-inset-top);:

    Lägger till ett padding längst upp på body-elementet som motsvarar avståndet från 
    toppen av skärmen till safe area.
    padding-bottom: env(safe-area-inset-bottom);

   Lägger till ett padding längst ner på body-elementet som motsvarar avståndet från botten av skärmen till safe area.
   padding-left: env(safe-area-inset-left);:

   Lägger till ett padding till vänster på body-elementet som motsvarar avståndet från vänster sida av skärmen till safe area.
   padding-right: env(safe-area-inset-right);:

   Lägger till ett padding till höger på body-elementet som motsvarar avståndet från höger sida av skärmen till safe area.
   Varför detta är Viktigt
   När du designar för moderna enheter med speciella skärmegenskaper, är det viktigt att säkerställa att innehållet alltid är synligt och lättillgängligt för användaren. Användning av safe area insets hjälper till att automatiskt justera layouten beroende på enhetens specifikationer, vilket ger en bättre användarupplevelse och ser till att inga viktiga delar av webbplatsen döljs eller skärs av.
--------------------------------------------------------------------------


      3. Förklaring av pixel ratio 

    -webkit-device-pixel-ratio:
    är en media feature som används i CSS för att målrikta
    enheter baserat på deras pixel densitet (även kallat pixel ratio). Pixel densitet
    är förhållandet mellan en enhets fysiska pixlar och dess logiska pixlar. En högre
    pixel densitet innebär att enheten har fler pixlar packade i samma fysiska område,
    vilket resulterar i en skarpare och mer detaljerad skärm.

     -Fysiska Pixlar
    Fysiska pixlar är de faktiska små ljuspunkterna som utgör en skärm. Varje fysisk pixel består av
    tre subpixlar (röd, grön och blå) som tillsammans kan bilda olika färger. Antalet fysiska pixlar
    på en skärm är fast och bestäms av skärmens hårdvara.

     -Logiska Pixlar (CSS Pixlar)
    Logiska pixlar, även kallade CSS-pixlar, är ett abstrakt mått som används i webbutveckling
    och design. Dessa pixlar används för att definiera storlek och position på element i CSS.
    En logisk pixel är en enhet som webbläsare och designverktyg använder för att placera och
    skala innehåll på en skärm.

    Förklaring av -webkit-device-pixel-ratio: 3
    Pixel Ratio: Pixel ratio är förhållandet mellan fysiska pixlar och logiska pixlar på en skärm.
    Ett värde på 3 betyder att det finns 3 fysiska pixlar för varje logisk pixel. Detta resulterar
    i en mycket hög upplösning och skarp bildkvalitet.

    -webkit- Prefix: -webkit- prefixet används för att indikera att detta är en WebKit-specifik egenskap.
    WebKit är en webbläsarmotor som används av Safari och tidigare versioner av Chrome.
    Modern CSS använder vanligtvis standardiserade egenskaper utan vendor-prefix, men
    -webkit-device-pixel-ratio används ibland för bakåtkompatibilitet med äldre webbläsare.

    Varför använda -webkit-device-pixel-ratio?
     Att målrikta enheter baserat på deras pixel ratio är användbart för att anpassa designen 
    till skärmar med hög densitet, såsom Retina-skärmar på många Apple-enheter. Genom att
    använda -webkit-device-pixel-ratio kan du säkerställa att bilder, ikoner och andra 
    grafiska element ser skarpa och tydliga ut på dessa högupplösta skärmar.

*/



/*  4. Media queries för alla de iPhone-modeller som iPhone X och senare, inklusive deras specifika 
     upplösningar och pixel-förhållanden:*/

/* iPhone X, iPhone XS */
@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* Gäller nedan endast iphones med notches?
    De media queries som vi använde för olika iPhone-modeller (med device-width, device-height och
    -webkit-device-pixel-ratio) är specifika för dessa modeller, men de kan även matcha andra
    enheter som råkar ha samma skärmstorlek, upplösning och pixel densitet.
*/

/* iPhone XR, iPhone 11 */
@media only screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone XS Max, iPhone 11 Pro Max */
@media only screen and (device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 11 Pro */
@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 12 mini */
@media only screen and (device-width: 360px) and (device-height: 780px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 12, iPhone 12 Pro */
@media only screen and (device-width: 390px) and (device-height: 844px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 12 Pro Max */
@media only screen and (device-width: 428px) and (device-height: 926px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 13 mini */
@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 13, iPhone 13 Pro */
@media only screen and (device-width: 390px) and (device-height: 844px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 13 Pro Max */
@media only screen and (device-width: 428px) and (device-height: 926px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 14 */
@media only screen and (device-width: 390px) and (device-height: 844px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 14 Plus */
@media only screen and (device-width: 428px) and (device-height: 926px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 14 Pro */
@media only screen and (device-width: 393px) and (device-height: 852px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}

/* iPhone 14 Pro Max */
@media only screen and (device-width: 430px) and (device-height: 932px) and (-webkit-device-pixel-ratio: 3) {
    body {
        padding-top: env(safe-area-inset-top);
        padding-bottom: env(safe-area-inset-bottom);
        padding-left: env(safe-area-inset-left);
        padding-right: env(safe-area-inset-right);
    }
}
