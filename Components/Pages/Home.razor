@page "/"
@using Microsoft.AspNetCore.Components
@using OneMoreDate.Components.Reusable;
@inject NavigationManager Navigation

<div class='outer-container '>
    <div class='inner-container fade-out'>
        <h1 class="animate__animated animate__slideInLeft w-50 one">One</h1>
        <h1 class="animate__animated animate__slideInLeft animate__delay-1s w-60 text-center more">More</h1>
    </div>
    <div class='outer-image-container fade-out'>
        <h1 class="animate__animated animate__slideInRight animate__delay-2s date">Date?</h1>
        <div class='image-container'>
            <img src=@images[currentImageIndex] alt="logo" class="logo" />
        </div>
    </div>
    <div class='outer-image-container fade-in'>
       
        <div class='image-container'>
            <img id="logo" src=@images[currentImageIndex] alt="logo" class="logo fade-out-after-animations" />
        </div>
    </div>
   
</div>

@if (showButtons)
{
    <div class="fade-in-btns">
        <div class="outer-btn-container ">
            <div class="inner-menu-container">
                <button @onclick="StartGame" class="mb-4 menu-start-btn"> Start Game </button>
                <button @onclick="GoToRules" class="menu-rules-btn"> Rules </button>
            </div>
        </div>
    </div>

}


@code {
    private bool showButtons = false;
    private string[] images = new string[]
    {
        "images/Bild_1.png",
        "images/Bild_2.png",
        "images/Bild_3.png",
        "images/Bild_4.png",
        "images/Bild_5.png"
    };

    private int currentImageIndex = 0;
    private Timer _timer; // timer för bildbyte


    protected override async Task OnInitializedAsync()
    {
        _timer = new Timer(ChangeImage, null, 3500, 500);
       
    }


    private void ChangeImage(object state)
    {
        InvokeAsync(() =>
        {
            currentImageIndex = (currentImageIndex + 1) % images.Length;
            if (currentImageIndex == images.Length - 1)
            {
                _timer?.Dispose(); 
                showButtons = true;
            }

            StateHasChanged();

        });
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }

    private void StartGame()
    {
        Navigation.NavigateTo("/players");
    }

    private void GoToRules()
    {
        Navigation.NavigateTo("/rules");
    }


  
  
}
