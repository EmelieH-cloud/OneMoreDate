@page "/deck"
@using OneMoreDate.Managers;
@using OneMoreDate.Models;
@using OneMoreDate.Components.Reusable;
@inject NavigationManager Navigation

<GoBackBtn BackUrl="inputPlayerNames" />
<div class="deck-outer-container">


@if (showModal)
{
   
      <div class="overlay-background" @onclick="closeBtn"></div>
    <div class="deck-modal-inner-container">
        <DeckModal CloseButton="closeBtn"  DeckNumber =@deckNumber AddAnimationClass=@addAnimationClass />
    </div>
}
    <div class="select-deck-header-container">
        <h1 class="select-deck-header animate__animated animate__slideInLeft">Select Deck</h1>
    </div>


<div class="my-decks-container mb-4 text-center animate__animated animate__fadeIn animate__slower rounded">

        <div class="select-deck-container " @onclick="()=>selectDeck(1)" >
            <h4 class="deck-header">The Trial Deck</h4>
        <img src="./images/deck.png" alt="deck" class="img-smaller" />
   
    </div>

    <div class="select-deck-container" @onclick="()=>selectDeck(2)">
            <h4 class="deck-header">The Party Deck</h4>
        <img src="./images/partydeck.png" alt="deck" class="img-smaller" />
         
    </div>

    <div class="select-deck-container" @onclick="()=>selectDeck(3)">
            <h4 class="deck-header">The Naughty Deck </h4>
        <img src="./images/naughtydeck.png" alt="deck" class="img-smaller" />
         
        </div>

    
</div>
</div>

@code {
    private string addAnimationClass = "";
    private bool showModal = false;
    private int deckNumber;

    private void GoBack()
    {
        Navigation.NavigateTo("/startGame");
    }

    private void selectDeck(int deckId)
    {
        addAnimationClass = "animate__animated animate__fadeIn";
        deckNumber = deckId;
        showModal = true;
        StateHasChanged(); 

        // Convert deck number to deck name
        string deckName = deckId switch
        {
            1 => "trialDeck",
            2 => "partyDeck",
            3 => "naughtyDeck",
            _ => throw new InvalidOperationException("Invalid deck ID")
        };

        // Use GameManager to set (not initialize) the active deck
        GameManager.AddActiveDeck(deckName);

        // Navigate to game page 
        Navigation.NavigateTo("/startGame");
    }

    private void closeBtn()
    {
        showModal = false;
        addAnimationClass = "animate__animated animate__fadeOut";
        StateHasChanged();
    }
}

